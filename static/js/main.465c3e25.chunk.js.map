{"version":3,"sources":["assets/tmovie.png","components/header/Header.jsx","assets/footer-bg.jpg","components/footer/Footer.jsx","components/button/Button.jsx","components/modal/Modal.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","pages/detail/VideoList.jsx","pages/detail/Detail.jsx","config/Routes.jsx","App.js","index.js"],"names":["headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","active","findIndex","e","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","ref","className","src","logo","alt","to","map","i","Footer","style","backgroundImage","bg","Button","props","onClick","children","OutlineButton","ModalContent","contentRef","parentNode","onClose","Modal","useState","setActive","id","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","a","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","search","detail","credits","similar","HeroSlideItem","hisrory","useHistory","item","background","backdrop_path","poster_path","setModalActive","modal","querySelector","videos","results","length","videSrc","key","setAttribute","innerHTML","toggle","title","overview","push","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","getMovies","page","slice","console","log","modules","grabCursor","spaceBetween","slidesPerView","autoplay","delay","index","isActive","MovieCard","link","name","MovieList","items","setItems","getList","Home","PageHeader","Input","placeholder","value","onChange","MovieSearch","history","keyword","setKeyword","gotoSearch","useCallback","trim","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","loadMore","Catalog","CastList","casts","setCasts","getCredit","res","cast","profile_path","Video","offsetWidth","VideoList","setVideos","Detail","setItem","getDetail","scrollTo","genres","Routes","component","exact","App","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.465c3e25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.67797e94.png\";","import React, { useRef, useEffect } from 'react';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './header.scss';\n\nimport logo from '../../assets/tmovie.png';\n\nconst headerNav = [\n    {\n        display: 'Home',\n        path: '/'\n    },\n    {\n        display: 'Movies',\n        path: '/movie'\n    },\n    {\n        display: 'TV Series',\n        path: '/tv'\n    }\n];\n\nconst Header = () => {\n\n    const { pathname } = useLocation();\n    const headerRef = useRef(null);\n\n    const active = headerNav.findIndex(e => e.path === pathname);\n\n    useEffect(() => {\n        const shrinkHeader = () => {\n            if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\n                headerRef.current.classList.add('shrink');\n            } else {\n                headerRef.current.classList.remove('shrink');\n            }\n        }\n        window.addEventListener('scroll', shrinkHeader);\n        return () => {\n            window.removeEventListener('scroll', shrinkHeader);\n        };\n    }, []);\n\n    return (\n        <div ref={headerRef} className=\"header\">\n            <div className=\"header__wrap container\">\n                <div className=\"logo\">\n                    <img src={logo} alt=\"\" />\n                    <Link to=\"/\">tMovies</Link>\n                </div>\n                <ul className=\"header__nav\">\n                    {\n                        headerNav.map((e, i) => (\n                            <li key={i} className={`${i === active ? 'active' : ''}`}>\n                                <Link to={e.path}>\n                                    {e.display}\n                                </Link>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import React from 'react'\r\n\r\nimport './footer.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport bg from '../../assets/footer-bg.jpg'\r\nimport logo from '../../assets/tmovie.png'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\" style={{backgroundImage:`url(${bg})`}}>\r\n            <div className=\"footer__content container\">\r\n                <div className=\"footer__content__logo\">\r\n                    <div className=\"logo\">\r\n                        <img src={logo} alt=\"\" />\r\n                        <Link to=\"/\">tMovies</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer__content__menus\">\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/\">Contact</Link>\r\n                        <Link to=\"/\">Tera of services</Link>\r\n                        <Link to=\"/\">About us</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Live</Link>\r\n                        <Link to=\"/\">FAQ</Link>\r\n                        <Link to=\"/\">Premium</Link>\r\n                        <Link to=\"/\">Pravacy policy</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">YOu must watch</Link>\r\n                        <Link to=\"/\">Recent release</Link>\r\n                        <Link to=\"/\">Top IMDB</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.scss';\n\nconst Button = props => {\n    return (\n        <button\n            className={`btn ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </button>\n    );\n}\n\nexport const OutlineButton = props => {\n    return (\n        <Button\n            className={`btn-outline ${props.className}`}\n            onClick={props.onClick ? () => props.onClick() : null}\n        >\n            {props.children}\n        </Button>\n    );\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func\n}\n\nexport default Button;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './modal.scss';\n\nconst Modal = props => {\n\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        setActive(props.active);\n    }, [props.active]);\n\n    return (\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\n            {props.children}\n        </div>\n    );\n}\n\nModal.propTypes = {\n    active: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport const ModalContent = props => {\n\n    const contentRef = useRef(null);\n\n    const closeModal = () => {\n        contentRef.current.parentNode.classList.remove('active');\n        if (props.onClose) props.onClose();\n    }\n\n    return (\n        <div ref={contentRef} className=\"modal__content\">\n            {props.children}\n            <div className=\"modal__content__close\" onClick={closeModal}>\n                <i className=\"bx bx-x\"></i>\n            </div>\n        </div>\n    )\n}\n\nModalContent.propTypes = {\n    onClose: PropTypes.func\n}\n\nexport default Modal;\n","const apiConfig = {\n  baseUrl: \"https://api.themoviedb.org/3/\",\n  apiKey: \"4a608ac97ed2a47e56fdf6d98e8ec371\",\n  originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\n  w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`,\n};\n\nexport default apiConfig;\n","import axios from 'axios';\nimport queryString from 'query-string';\n\nimport apiConfig from './apiConfig';\n\nconst axiosClient = axios.create({\n    baseURL: apiConfig.baseUrl,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\n});\n\naxiosClient.interceptors.request.use(async (config) => config);\n\naxiosClient.interceptors.response.use((response) => {\n    if (response && response.data) {\n        return response.data;\n    }\n\n    return response;\n}, (error) => {\n    throw error;\n});\n\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\n\nexport const category = {\n    movie: 'movie',\n    tv: 'tv'\n}\n\nexport const movieType = {\n    upcoming: 'upcoming',\n    popular: 'popular',\n    top_rated: 'top_rated'\n}\n\nexport const tvType = {\n    popular: 'popular',\n    top_rated: 'top_rated',\n    on_the_air: 'on_the_air'\n}\n\nconst tmdbApi = {\n    getMoviesList: (type, params) => {\n        const url = 'movie/' + movieType[type];\n        return axiosClient.get(url, params);\n    },\n    getTvList: (type, params) => {\n        const url = 'tv/' + tvType[type];\n        return axiosClient.get(url, params);\n    },\n    getVideos: (cate, id) => {\n        const url = category[cate] + '/' + id + '/videos';\n        return axiosClient.get(url, {params: {}});\n    },\n    search: (cate, params) => {\n        const url = 'search/' + category[cate];\n        return axiosClient.get(url, params);\n    },\n    detail: (cate, id, params) => {\n        const url = category[cate] + '/' + id;\n        return axiosClient.get(url, params);\n    },\n    credits: (cate, id) => {\n        const url = category[cate] + '/' + id + '/credits';\n        return axiosClient.get(url, {params: {}});\n    },\n    similar: (cate, id) => {\n        const url = category[cate] + '/' + id + '/similar';\n        return axiosClient.get(url, {params: {}});\n    },\n}\n\nexport default tmdbApi;","import React, { useState, useEffect, useRef } from 'react';\n\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport Button, { OutlineButton } from '../button/Button';\nimport Modal, { ModalContent } from '../modal/Modal';\n\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport './hero-slide.scss';\nimport { useHistory } from 'react-router';\n\nconst HeroSlide = () => {\n\n    SwiperCore.use([Autoplay]);\n\n    const [movieItems, setMovieItems] = useState([]);\n\n    useEffect(() => {\n        const getMovies = async () => {\n            const params = {page: 1}\n            try {\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\n                setMovieItems(response.results.slice(1, 4));\n                console.log(response);\n            } catch {\n                console.log('error');\n            }\n        }\n        getMovies();\n    }, []);\n\n    return (\n        <div className=\"hero-slide\">\n            <Swiper\n                modules={[Autoplay]}\n                grabCursor={true}\n                spaceBetween={0}\n                slidesPerView={1}\n                autoplay={{delay: 3000}}\n            >\n                {\n                    movieItems.map((item, index) => (\n                        <SwiperSlide key={index}>\n                            {({ isActive }) => (\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\n                            )}\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n            {\n                movieItems.map((item, index) => <TrailerModal key={index} item={item}/>)\n            }\n        </div>\n    );\n}\n\nconst HeroSlideItem = props => {\n\n    let hisrory = useHistory();\n\n    const item = props.item;\n\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n\n    const setModalActive = async () => {\n        const modal = document.querySelector(`#modal_${item.id}`);\n\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\n\n        if (videos.results.length > 0) {\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\n        } else {\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\n        }\n\n        modal.classList.toggle('active');\n    }\n\n    return (\n        <div\n            className={`hero-slide__item ${props.className}`}\n            style={{backgroundImage: `url(${background})`}}\n        >\n            <div className=\"hero-slide__item__content container\">\n                <div className=\"hero-slide__item__content__info\">\n                    <h2 className=\"title\">{item.title}</h2>\n                    <div className=\"overview\">{item.overview}</div>\n                    <div className=\"btns\">\n                        <Button onClick={() => hisrory.push('/movie/' + item.id)}>\n                            Watch now\n                        </Button>\n                        <OutlineButton onClick={setModalActive}>\n                            Watch trailer\n                        </OutlineButton>\n                    </div>\n                </div>\n                <div className=\"hero-slide__item__content__poster\">\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst TrailerModal = props => {\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    const onClose = () => iframeRef.current.setAttribute('src', '');\n\n    return (\n        <Modal active={false} id={`modal_${item.id}`}>\n            <ModalContent onClose={onClose}>\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default HeroSlide;\n","import React from 'react'\r\n\r\nimport './movie-card.scss'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Button from '../button/Button'\r\n\r\nimport { category } from '../../api/tmdbApi'\r\nimport apiConfig from '../../api/apiConfig'\r\n\r\nconst MovieCard = (props) => {\r\n\r\n    const item = props.item\r\n\r\n    const link = '/' + category[props.category]+ '/' + item.id\r\n\r\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path)\r\n\r\n    return (\r\n        <Link to={link}>\r\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}}>\r\n                <Button>\r\n                    <i className=\"bx bx-play\"></i>\r\n                </Button>\r\n            </div>\r\n            <h3>{item.title || item.name}</h3>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './movie-list.scss'\r\n\r\nimport { SwiperSlide, Swiper } from 'swiper/react'\r\n\r\nimport tmdbApi, { category } from '../../api/tmdbApi'\r\n\r\nimport MovieCard from '../movie-card/MovieCard'\r\n\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null\r\n            const params = {}\r\n\r\n            if(props.type !== 'similar') {\r\n                switch ((props.category)) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params})\r\n                        break;\r\n                \r\n                    default:\r\n                        response = await tmdbApi.getTvList(props.type, {params})\r\n                }\r\n            } else {\r\n                response = await tmdbApi.similar(props.category, props.id)\r\n            }\r\n            setItems(response.results)\r\n        }\r\n        getList();\r\n    }, [props.category, props.id, props.type])\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n                grabCursor={true}\r\n                spaceBetween={10}\r\n                slidesPerView={'auto'}\r\n            >\r\n                {\r\n                    items.map((item, index) => (\r\n                        <SwiperSlide key={index}>\r\n                            <MovieCard item={item} category={props.category}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { OutlineButton } from '../components/button/Button';\n\nimport HeroSlide from '../components/hero-slide/HeroSlide';\nimport MovieList from '../components/movie-list/MovieList';\n\nimport { category, movieType, tvType } from '../api/tmdbApi';\n\nconst Home = () => {\n    return (\n        <>\n            <HeroSlide/>\n            <div className=\"container\">\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Trending Movies</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">\n                                View more\n                            </OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList\n                        category={category.movie}\n                        type={movieType.popular}\n                    />\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Top Rated Movies</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">\n                                View more\n                            </OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList\n                        category={category.movie}\n                        type={movieType.top_rated}\n                    />\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Trending TV</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">\n                                View more\n                            </OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList\n                        category={category.tv}\n                        type={tvType.popular}\n                    />\n                </div>\n\n                <div className=\"section mb-3\">\n                    <div className=\"section__header mb-2\">\n                        <h2>Top Rated TV</h2>\n                        <Link to=\"/movie\">\n                            <OutlineButton className=\"small\">\n                                View more\n                            </OutlineButton>\n                        </Link>\n                    </div>\n                    <MovieList\n                        category={category.movie}\n                        type={tvType.top_rated}\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Home;\n","import React from 'react'\r\n\r\nimport './page-header.scss'\r\n\r\nimport bg from '../../assets/footer-bg.jpg'\r\n\r\nconst PageHeader = props => {\r\n    return (\r\n        <div className=\"page-header\" style={{backgroundImage: `url(${bg})`}}>\r\n            <h2>{props.children}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageHeader\r\n","import React from 'react'\r\nimport './input.scss'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input \r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            value={props.value}\r\n            onChange={props.onChange ? (e) => props.onChange(e) : null}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\n\r\nimport './movie-grid.scss'\r\n\r\nimport MovieCard from '../movie-card/MovieCard'\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi'\r\nimport Button, { OutlineButton } from '../button/Button'\r\nimport Input from '../input/Input'\r\n\r\nconst MovieGrid = (props) => {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [totalPage, setTotalPage] = useState(0)\r\n\r\n    const { keyword } = useParams()\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n\r\n            if(keyword === undefined) {\r\n                const params = {}\r\n                switch (props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(tvType.popular, {params})\r\n                }\r\n            } else {\r\n                const params = {\r\n                    query: keyword\r\n                }\r\n                response = await tmdbApi.search(props.category, {params})\r\n            }\r\n            setItems(response.results)\r\n            setTotalPage(response.total_pages)\r\n        }\r\n        getList()\r\n    }, [props.category, keyword])\r\n\r\n    const loadMore = async () => {\r\n        let response = null;\r\n\r\n        if(keyword === undefined) {\r\n            const params = {\r\n                page: page + 1\r\n            }\r\n            switch (props.category) {\r\n                case category.movie:\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n                    break;\r\n                default:\r\n                    response = await tmdbApi.getTvList(tvType.popular, {params})\r\n            }\r\n        } else {\r\n            const params = {\r\n                page: page + 1,\r\n                query: keyword\r\n            }\r\n            response = await tmdbApi.search(props.category, {params})\r\n        }\r\n        setItems([...items, ...response.results])\r\n        setPage(page + 1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"section mb-3\">\r\n            <MovieSearch category={props.category} keyword={keyword}/>\r\n        </div>\r\n            <div className=\"movie-grid\">\r\n                {\r\n                    items.map((item, index) => <MovieCard category={props.category} item={item} key={index}/>)\r\n                }\r\n            </div>\r\n            {\r\n                page < totalPage ? (\r\n                    <div className=\"movie-grid__loadmore\">\r\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst MovieSearch = props => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '')\r\n\r\n    const gotoSearch = useCallback(\r\n        () => {\r\n            if(keyword.trim().length > 0) {\r\n                history.push(`/${category[props.category]}/search/${keyword}`)\r\n            }\r\n        },\r\n        [keyword, props.category, history]\r\n    )\r\n\r\n    useEffect(() => {\r\n        const enterEvent = (e) => {\r\n            e.preventDefault()\r\n            if(e.keyCode === 13){\r\n                gotoSearch()\r\n            }\r\n        }\r\n        document.addEventListener('keyup', enterEvent)\r\n        return () => {\r\n            document.removeEventListener('keyup', enterEvent)\r\n        }\r\n    }, [keyword, gotoSearch])\r\n    \r\n    return (\r\n        <div className=\"movie-search\">\r\n            <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter keyword\"\r\n                value={keyword}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n            />\r\n            <Button className=\"small\" onClick={gotoSearch}>Search</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGrid\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router'\r\n\r\nimport PageHeader from '../components/page-header/PageHeader'\r\nimport MovieGrid from '../components/movie-grid/MovieGrid'\r\n\r\nimport { category as cate } from '../api/tmdbApi'\r\n\r\nconst Catalog = () => {\r\n\r\n    const { category } = useParams()\r\n    console.log(category);\r\n\r\n    return (\r\n        <div>\r\n            <PageHeader>\r\n                {category === cate.movie ? 'Movie' : 'TV Series'}\r\n            </PageHeader>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <MovieGrid category={category}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Catalog\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { useParams } from 'react-router'\r\n\r\nimport tmdbApi from '../../api/tmdbApi'\r\nimport apiConfig from '../../api/apiConfig'\r\n\r\nconst CastList = (props) => {\r\n\r\n    const {category} = useParams()\r\n\r\n    const [casts, setCasts] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getCredit = async () => {\r\n            const res = await tmdbApi.credits(category, props.id)\r\n                setCasts(res.cast.slice(0, 5))\r\n        }\r\n        getCredit()\r\n    }, [category, props.id])\r\n\r\n    return (\r\n        <div className=\"casts\"> \r\n            {\r\n                casts.map((item, index) => (\r\n                    <div key={index} className=\"casts__item\">\r\n                        <div \r\n                            className=\"casts__item__img\" \r\n                            style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}>\r\n                        </div>\r\n                            <p className=\"casts__item__name\">\r\n                                {item.name}\r\n                            </p>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastList\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport { useParams } from 'react-router'\r\n\r\nimport tmdbApi from '../../api/tmdbApi'\r\n\r\nconst VideoList = (props) => {\r\n\r\n    const {category} = useParams()\r\n\r\n    const [videos, setVideos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getVideos = async () => {\r\n            const res = await tmdbApi.getVideos(category, props.id)\r\n            setVideos(res.results.slice(0, 5))\r\n        }\r\n        getVideos()\r\n    }, [category, props.id])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                videos.map((item, index) => (\r\n                    <Video key={index} item={item}/>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Video = props => {\r\n\r\n    const item = props.item\r\n\r\n    const iframeRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const height = iframeRef.current.offsetWidth * 9 /16 + 'px'\r\n        iframeRef.current.setAttribute('height', height)\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__title\">\r\n                <h2>{item.name}</h2>\r\n            </div>\r\n            <iframe \r\n                src={`https://www.youtube.com/embed/${item.key}`}\r\n                ref={iframeRef}\r\n                width=\"100%\"\r\n                title=\"video\"\r\n            ></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nimport './detail.scss'\r\n\r\nimport tmdbApi from '../../api/tmdbApi'\r\nimport apiConfig from '../../api/apiConfig'\r\nimport CastList from './CastList'\r\nimport VideoList from './VideoList'\r\nimport MovieList from '../../components/movie-list/MovieList'\r\n\r\nconst Detail = () => {\r\n\r\n    const { category, id } = useParams()\r\n\r\n    const [item, setItem] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getDetail = async () => {\r\n            const response = await tmdbApi.detail(category, id, {params:{}})\r\n            setItem(response)\r\n            window.scrollTo(0,0)\r\n        }\r\n        getDetail()\r\n    }, [category, id])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                item && (\r\n                    <>\r\n                        <div className=\"banner\" style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\r\n                        <div className=\"mb-3 movie-content container\">\r\n                            <div className=\"movie-content__poster\">\r\n                                <div className=\"movie-content__poster__img\" style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\r\n                            </div>\r\n                            <div className=\"movie-content__info\">\r\n                                <h1 className=\"title\">\r\n                                    {item.title || item.name}\r\n                                </h1>\r\n                                <div className=\"genres\">\r\n                                    {\r\n                                        item.genres && item.genres.slice(0, 5).map((genres, index) => (\r\n                                            <span key={index} className=\"genres__item\">{genres.name}</span>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                <p className=\"oveview\">{item.overview}</p>\r\n                                <div className=\"cast\">\r\n                                    <div className=\"section__header\">\r\n                                        <h2>Casts</h2>\r\n                                    </div>\r\n                                    <CastList id={item.id}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n                            <div className=\"section mb-3\">\r\n                                <VideoList id={item.id}/>\r\n                            </div>\r\n                            <div className=\"section mb-3\">\r\n                                <div className=\"section__header mb-2\">\r\n                                    <h2>Simlar</h2>\r\n                                </div>\r\n                                <MovieList category={category} type=\"similar\" id={item.id} />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport Catalog from '../pages/Catalog';\nimport Detail from '../pages/detail/Detail';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route\n                path='/:category/search/:keyword'\n                component={Catalog}\n            />\n            <Route\n                path='/:category/:id'\n                component={Detail}\n            />\n            <Route\n                path='/:category'\n                component={Catalog}\n            />\n            <Route\n                path='/'\n                exact\n                component={Home}\n            />\n        </Switch>\n    );\n}\n\nexport default Routes;\n","import 'swiper/swiper.min.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\nimport './App.scss';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\n\nimport Routes from './config/Routes';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Route render={props => (\n                <>\n                    <Header {...props}/>\n                    <Routes/>\n                    <Footer/>\n                </>\n            )}/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}